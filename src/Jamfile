SubDir TOP src ;

SubDirSysHdrs [ FDirName $(TOP) ] ;

# This is the list of locations where
# we have sources. If you add a location
# you have to add it here.
SEARCH_SOURCE += [ FDirName $(TOP) src ] ;
SEARCH_SOURCE += [ FDirName $(TOP) src gui ] ;

SEARCH_SOURCE += [ FDirName $(TOP) src audio ] ;
SEARCH_SOURCE += [ FDirName $(TOP) src audio filters ] ;
SEARCH_SOURCE += [ FDirName $(TOP) src audio node ] ;

SEARCH_SOURCE += [ FDirName $(TOP) src views ] ;
SEARCH_SOURCE += [ FDirName $(TOP) src views track ] ;

SEARCH_SOURCE += [ FDirName $(TOP) src windows ] ;
SEARCH_SOURCE += [ FDirName $(TOP) src windows mixer ] ;
SEARCH_SOURCE += [ FDirName $(TOP) src windows tools ] ;
SEARCH_SOURCE += [ FDirName $(TOP) src windows misc ] ;

SEARCH_SOURCE += [ FDirName $(TOP) src common ] ;

# NOTE this is the location for headers needed to 
# access the BPrivate namespace data, only put such type of
# headers there. 
SEARCH_SOURCE += [ FDirName $(TOP) src common private_headers ] ;

SEARCH_SOURCE += [ FDirName $(TOP) src preferences ] ;


Application Faber :
	# this is the core code
	Faber.cpp
	FaberWindow.cpp
	ToolBar.cpp
	InfoToolBar.cpp

	# trackviews implementation and containers
	TrackView.cpp
	AudioTrackView.cpp
	SampleView.cpp

	TracksContainer.cpp
	MouseIcons.cpp

	# managers
	WindowsManager.cpp

	# Various windows
	# TODO those should be reworked with layouts
	ProgressWindow.cpp
	SavePanel.cpp
	OpenPanel.cpp
	#FreqWindow.cpp
	#ResampleWindow.cpp

	# app and libstilnovo implementation base classes
	SeekSlider.cpp
	SpinControl.cpp
	SpinSlider.cpp
	PeakView.cpp
	SpinButton.cpp
	VolumeSlider.cpp
	FStringItem.cpp
	IconButton.cpp
	BitmapDrawer.cpp
	ToolButton.cpp

	# Settings
	SettingsWindow.cpp
	SettingsView.cpp
	Settings.cpp
	Preferences.cpp
	PrefGeneral.cpp
	Shortcut.cpp
	PrefKeys.cpp
	PrefColors.cpp
	SwatchView.cpp

	# Common
	#MyClipBoard.cpp # TODO Rename it Clipboard or FaberClipboard
	#CommonPool.cpp # TODO Remove it
	PeakFile.cpp
	TrackIO.cpp

	# Audio internal API
	Track.cpp
	AudioTrack.cpp

	MediaGate.cpp
	AudioGate.cpp

	# Audio nodes
	FaberNode.cpp

	# filters
	AmplifierFilter.cpp
	Filters.cpp
	RealtimeFilter.cpp
	BassBoostFilter.cpp
	LimiterFilter.cpp
	CompressorFilter.cpp
	NormalizeFilter.cpp
	RoomFilter.cpp

	ReverbWindow.cpp
	DelayWindow.cpp

	: be media $(TARGET_LIBSTDC++) game tracker translation localestub
	: Faber.rdef ToolBarIcons.rdef
;

InstallBin $(FABER_DIRECTORY) : Faber ;
